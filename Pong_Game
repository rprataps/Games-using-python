# Implementation of classic arcade game Pong
#Player "Red" should use 'up' and 'down' keys to move paddle up and down respectively
#Player "Black" should use 'w' and 's' keys to move paddle up and down respectively
#Ravi Pratap Singh

import simplegui
import random

# initialize globals - pos and vel encode vertical info for paddles
WIDTH = 600
HEIGHT = 400       
BALL_RADIUS = 20
PAD_WIDTH = 8
PAD_HEIGHT = 80
HALF_PAD_WIDTH = PAD_WIDTH / 2
HALF_PAD_HEIGHT = PAD_HEIGHT / 2
LEFT = False
RIGHT = True
paddle1_vel = 0; paddle2_vel = 0
paddle1_pos = HEIGHT/2; paddle2_pos = HEIGHT/2
ball_pos = [0,0]
ball_vel = [0,0]
score1 = 0; score2 = 0

# initialize ball_pos and ball_vel for new bal in middle of table
# if direction is RIGHT, the ball's velocity is upper right, else upper left
def spawn_ball(direction):
    global ball_pos, ball_vel # these are vectors stored as lists
    ball_pos[1] = HEIGHT/2
    ball_pos[0] = WIDTH/2
    if (direction == RIGHT):
        ball_vel = [random.randrange(120, 240)/60, -random.randrange(1,5)/60] 
    else:
        ball_vel = [-random.randrange(120, 240)/60, -random.randrange(1,5)/60] 
    
# define event handlers
def restart():
    new_game()
    
def new_game():
    global paddle1_pos, paddle2_pos, paddle1_vel, paddle2_vel  # these are numbers
    global score1, score2  # these are ints
    score1 = 0
    score2 = 0
    paddle1_pos = HEIGHT/2
    paddle2_pos = HEIGHT/2
    paddle_vel1 = 0
    paddle_vel2 = 0
    spawn_ball(RIGHT)
    
def draw(canvas):
    global score1, score2, paddle1_pos, paddle2_pos, ball_pos, ball_vel        
    # draw mid line and gutters
    canvas.draw_line([WIDTH / 2, 0],[WIDTH / 2, HEIGHT], 1, "White")
    canvas.draw_line([PAD_WIDTH, 0],[PAD_WIDTH, HEIGHT], 1, "White")
    canvas.draw_line([WIDTH - PAD_WIDTH, 0],[WIDTH - PAD_WIDTH, HEIGHT], 1, "White")
    # update ball
    ball_pos[0] += ball_vel[0]
    ball_pos[1] += ball_vel[1]
    if ball_pos[1]+BALL_RADIUS > HEIGHT :
        ball_vel[1] = -ball_vel[1]
    if ball_pos[1]-BALL_RADIUS < 0 :
        ball_vel[1] = -ball_vel[1]
    if (ball_pos[0] - BALL_RADIUS <= PAD_WIDTH) :
        if (ball_pos[1] < paddle1_pos+HALF_PAD_HEIGHT) and (ball_pos[1] > paddle1_pos-HALF_PAD_HEIGHT):
            ball_vel[0] = -ball_vel[0]*1.1
        else :
            sound.play() 
            sound.pause()            
            score2 += 1
            spawn_ball(RIGHT)
    if (ball_pos[0] + BALL_RADIUS >= WIDTH-PAD_WIDTH) :
        if (ball_pos[1] < paddle2_pos+HALF_PAD_HEIGHT) and (ball_pos[1] > paddle2_pos-HALF_PAD_HEIGHT):
            ball_vel[0] = -ball_vel[0]*1.1
        else :
            sound.play()
            sound.pause()            
            score1 += 1
            spawn_ball(LEFT)                  
    # draw ball
    canvas.draw_circle(ball_pos,BALL_RADIUS,1,"White","White")
    # update paddle's vertical position, keep paddle on the screen
    if paddle1_pos >= HALF_PAD_HEIGHT and paddle1_pos <= HEIGHT - HALF_PAD_HEIGHT:
        paddle1_pos += paddle1_vel
    elif paddle1_pos <= HALF_PAD_HEIGHT:
        paddle1_pos = HALF_PAD_HEIGHT
    elif paddle1_pos >= HEIGHT - HALF_PAD_HEIGHT:
        paddle1_pos = HEIGHT - HALF_PAD_HEIGHT
    if paddle2_pos >= HALF_PAD_HEIGHT and paddle2_pos <= HEIGHT - HALF_PAD_HEIGHT:
        paddle2_pos += paddle2_vel
    elif paddle2_pos <= HALF_PAD_HEIGHT:
        paddle2_pos = HALF_PAD_HEIGHT
    elif paddle2_pos >= HEIGHT - HALF_PAD_HEIGHT:
        paddle2_pos = HEIGHT - HALF_PAD_HEIGHT    
    # draw paddles
    canvas.draw_line([HALF_PAD_WIDTH, paddle1_pos + HALF_PAD_HEIGHT],[HALF_PAD_WIDTH, paddle1_pos - HALF_PAD_HEIGHT], PAD_WIDTH, "Black")
    canvas.draw_line([WIDTH - HALF_PAD_WIDTH, paddle2_pos + HALF_PAD_HEIGHT],[WIDTH - HALF_PAD_WIDTH, paddle2_pos - HALF_PAD_HEIGHT], PAD_WIDTH, "Red")      
    # draw scores
    canvas.draw_text(str(score1), [WIDTH*.20,80], 40, "Black")
    canvas.draw_text(str(score2), [WIDTH*.80,80], 40, "Red")    

def keydown(key):
    global paddle1_vel, paddle2_vel, paddle1_pos, HALF_PAD_HEIGHT
    if key==simplegui.KEY_MAP["w"]:
        paddle1_vel = -5
    elif key==simplegui.KEY_MAP["s"]:
        paddle1_vel = 5
    elif key==simplegui.KEY_MAP["up"]:
        paddle2_vel = -5
    elif key==simplegui.KEY_MAP["down"]:
        paddle2_vel = 5
        
def keyup(key):
    global paddle1_vel, paddle2_vel
    if key==simplegui.KEY_MAP["w"]:
        paddle1_vel = 0
    elif key==simplegui.KEY_MAP["s"]:
        paddle1_vel = 0
    elif key==simplegui.KEY_MAP["up"]:
        paddle2_vel = 0
    elif key==simplegui.KEY_MAP["down"]:
        paddle2_vel = 0

# create frame
frame = simplegui.create_frame("Pong", WIDTH, HEIGHT)
frame.set_canvas_background('Blue')
button1 = frame.add_button('Restart', restart)
frame.set_draw_handler(draw)
frame.set_keydown_handler(keydown)
frame.set_keyup_handler(keyup)
sound = simplegui.load_sound('http://commondatastorage.googleapis.com/codeskulptor-assets/Epoq-Lepidoptera.ogg')

# start frame
new_game()
frame.start()
